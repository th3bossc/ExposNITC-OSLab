//module 2
alias functionNumber R1;

if (functionNumber == 1) then
    [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;
    while ([SYSTEM_STATUS_TABLE + 2] == 0) do
        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 4] = WAIT_MEM;
        call SCHEDULER;
    endwhile;
    
    [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1;
    [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;
    alias counter R2;
    counter = 80;
    
    while (counter < NUM_MEM_PAGES && [MEMORY_FREE_LIST + counter] != 0) do
        counter = counter+1;
    endwhile;
    [MEMORY_FREE_LIST + counter] = 1;
    breakpoint;
    R0 = counter;
endif;

if (functionNumber == 2) then
    alias pageNum R2;
    [MEMORY_FREE_LIST + pageNum] = [MEMORY_FREE_LIST + pageNum] - 1;
    
    if ([MEMORY_FREE_LIST + pageNum] == 0) then 
        [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
    endif;

    alias counter R3; 
    counter = 1;
    while (counter < MAX_PROC_NUM) do
        if ([PROCESS_TABLE + counter*16 + 4] == WAIT_MEM) then
            [PROCESS_TABLE + counter*16 + 4] = READY;
        endif;
        counter = counter + 1;
    endwhile;
    breakpoint;
endif;
return;


