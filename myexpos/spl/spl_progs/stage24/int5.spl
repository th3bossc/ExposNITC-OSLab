[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 13] = SP;
alias userSP R0;
userSP = SP;

SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 11]*512 - 1;

alias callNumber R1;
callNumber = [[PTBR + 2*(userSP-5)/512]*512 + (userSP-5)%512];

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 9] = callNumber;

alias returnAddress R2;
returnAddress = [PTBR + 2*(userSP-1)/512]*512 + (userSP-1)%512;

//open system call
if (callNumber == 2) then
    breakpoint;
    alias counter R3;
    counter = 0;
    alias resourceTable R4;
    resourceTable = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 11]*512 + RESOURCE_TABLE_OFFSET;
    while (counter < 8) do
        if ([resourceTable + counter*2 + 0] == -1) then 
            break;
        endif;
        counter = counter+1;
    endwhile;
    if (counter == 16) then
        [returnAddress] = -3;
    else
        alias fileName R5;
        fileName = [[PTBR + 2*(userSP-4)/512]*512 + (userSP-4)%512];
        alias fileTableEntry R6;
        multipush(R0, R1, R2, R3, R4, R5); //open function
        R1 = 3;
        R2 = fileName;
        call FILE_MANAGER;
        fileTableEntry = R0;
        multipop(R0, R1, R2, R3, R4, R5);

        if (fileTableEntry < 0) then 
            [returnAddress] = fileTableEntry;
        else
            [resourceTable + counter*2 + 0] = FILE;
            [resourceTable + counter*2 + 1] = fileTableEntry;
            [returnAddress] = counter;
        endif;
    endif;
    breakpoint;
endif;

//close system call
if (callNumber == 3) then 
    breakpoint;
    alias fileDescriptor R3;
    fileDescriptor = [[PTBR + 2*(userSP-4)/512]*512 + (userSP-4)%512];
    if (fileDescriptor < 0 || fileDescriptor > 7) then 
        [returnAddress] = -1;
    else
        alias resourceTableEntry R4;
        resourceTableEntry = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 11]*512 + RESOURCE_TABLE_OFFSET + fileDescriptor*2;

        if ([resourceTableEntry + 0] != FILE) then
            [returnAddress] = -1;
        else
            alias openFileTableEntry R5;
            openFileTableEntry = [resourceTableEntry + 1];

            multipush(R0, R1, R2, R3, R4, R5); //close function
            R1 = 4;
            R2 = openFileTableEntry;
            call FILE_MANAGER;
            multipop(R0, R1, R2, R3, R4, R5);

            [resourceTableEntry + 0] = -1;
            [returnAddress] = 0;
        endif;
    endif;
    breakpoint;
endif;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 9] = 0;
SP = userSP;
ireturn;