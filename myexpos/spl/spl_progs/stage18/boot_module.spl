//code files
loadi(65, 7);
loadi(66, 8);

//library module
loadi(63, 13);
loadi(64, 14);

//exception handler module
loadi(2, 15);
loadi(3, 16);

//timer interrupt module
loadi(4, 17);
loadi(5, 18);

//int6 module
loadi(14, 27);
loadi(15, 28);

//int7 module
loadi(16, 29);
loadi(17, 30);

//int 10 module
loadi(22, 35);
loadi(23, 36);

//module 0
loadi(40, 53);
loadi(41, 54);

//module 4
loadi(48, 61);
loadi(49, 62);

//console-interrupt-handler
loadi(8,21);
loadi(9,22);

//INT_9 
loadi(20,33);
loadi(21,34);

//module 1
loadi(42, 55);
loadi(43, 56);

//module 2
loadi(44, 57);
loadi(45, 58);

//indoe table
loadi(59, 3);
loadi(60, 4);

//DISK interrupt
loadi(6, 19);
loadi(7, 20);

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;
//library
[PTBR+0] = 63;
[PTBR+1] = "0100"; 
[PTBR+2] = 64;
[PTBR+3] = "0100";

//heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";


//code for INIT process
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[76*512] = [65*512 + 1]; 

[PROCESS_TABLE + 16 + 1] = 1; //process id of INIT is 1
[PROCESS_TABLE + 16 + 4] = CREATED;
[PROCESS_TABLE + 16 + 11] = 80; //first available free page is 80 (0 - 79 are system reserved)
[PROCESS_TABLE + 16 + 12] = 0;
[PROCESS_TABLE + 16 + 13] = 8*512;
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16 + 15] = 10;

//setting all other processes to terminated 
alias counter R0;

counter = 2;
while(counter < MAX_PROC_NUM) do
    [PROCESS_TABLE + counter*16 + 4] = TERMINATED;
    counter = counter + 1;
endwhile;

//initialing mem free list;
counter = 0;
while (counter <= 82) do
    [MEMORY_FREE_LIST + counter] = 1;
    counter = counter + 1;
endwhile;
while (counter < NUM_MEM_PAGES) do
    [MEMORY_FREE_LIST + counter] = 0;
    counter = counter + 1;
endwhile;

//set per process resource table entries
counter = 512-16;
while(counter < 512) do
    [[PROCESS_TABLE + 16 + 11]*512 + counter] = -1;
    counter = counter + 1;
endwhile;


[TERMINAL_STATUS_TABLE + 0] = 0;
[SYSTEM_STATUS_TABLE + 2] = NUM_MEM_PAGES-82;
[SYSTEM_STATUS_TABLE + 3] = 0;
[DISK_STATUS_TABLE + 0] = 0;
return;