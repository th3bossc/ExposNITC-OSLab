[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 7;

alias userSP R1;
userSP = SP;

alias currentPID R2;
alias process_table R3;
currentPID = [SYSTEM_STATUS_TABLE + 1];
process_table = PROCESS_TABLE + currentPID*16;


[process_table+ 13] = userSP;
SP = [process_table + 11]*512 -1;

alias page_table R4;

page_table = PAGE_TABLE_BASE + 20*currentPID;
alias fileDesc R5;
R11 = userSP-4;
breakpoint;
call stkval;
fileDesc = R11;

alias varAddr R6;
R11 = userSP - 3;
call stkval;
varAddr = R11;

if(fileDesc == -1) then
	multipush( R1, R2, R3, R4, R5, R6);
	R1 = TERMINAL_READ;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	R3 = varAddr;
	call DEVICE_MANAGER;

	multipop(R1, R2, R3, R4, R5, R6);
	R11 = 0;
        goto retLabel;
else
	if( fileDesc < 0 || fileDesc > 7) then
	  R11 = -1;
	  goto retLabel;
	endif;
	
	alias resTab  R7;
	resTab = [process_table + 11]*512 + RESOURCE_TABLE_OFFSET + fileDesc*2;
	if([resTab] != FILE) then
	  R11 = -1;
	  goto retLabel;
	endif;

	alias openFileIndex R8;
	openFileIndex = [resTab + 1];
	alias inodeIndex R9;
	inodeIndex = [OPEN_FILE_TABLE + 4*openFileIndex];
	
	multipush(R1, R2, R3, R4, R5, R6, R7, R8, R9);
	R1 = ACQUIRE_INODE;
	R3 = currentPID;
	R2 = inodeIndex; 
	
	call RESOURCE_MANAGER;
	multipop(R1, R2, R3, R4, R5, R6, R7, R8, R9);
	
	if(R0 == -1) then
	  R11 = -1;
	  goto retLabel;
	endif;

	alias lseek R10;
	lseek = [OPEN_FILE_TABLE + 4*openFileIndex + 2];
	
	if(inodeIndex == INODE_ROOT) then
	  if(lseek == 480) then
 	    breakpoint;
	    call relInode;
	    R11 = -2;
	    goto retLabel;
	  endif;
	  
	  [[PTBR + 2*(varAddr/512)]*512 + (varAddr%512)] = [ROOT_FILE + lseek];
	  [OPEN_FILE_TABLE + 4*openFileIndex + 2] = lseek + 1;

	else
	  if(lseek == [INODE_TABLE + 16*inodeIndex + 2]) then
	    call relInode;
	    R11 = -2;
	    goto retLabel;	    
	  endif;
	  alias diskBlock R12;
	  diskBlock = [INODE_TABLE + 16*inodeIndex + 8 + (lseek/512)];
	  multipush(R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R12);
	  R1 = BUFFERED_READ;
	  R2 = diskBlock;
	  R3 = (lseek%512);
	  R4 = [PTBR + 2*(varAddr/512)]*512 + (varAddr%512);	
	  call FILE_MANAGER;
	  multipop(R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R12);
	  [OPEN_FILE_TABLE+ 4*openFileIndex + 2] = lseek + 1;
	endif;	
        breakpoint;	
	call relInode;
	R11 = 0;
	goto retLabel;
	relInode:
  	  multipush(R1, R2, R3, R4, R5, R6, R7, R8, R9, R10);
	  R1 = RELEASE_INODE;
	  R3 = currentPID;
	  R2 = inodeIndex;
	  call RESOURCE_MANAGER;
	  multipop(R1, R2, R3, R4, R5, R6, R7, R8, R9, R10);
	  return;

	
	

endif;


stkval:
  R11 = [[page_table + 2*(R11)/512]*512 + (R11)%512];
  return;

retLabel:
  [[page_table + 2*(userSP-1)/512]*512 + (userSP-1)%512] =  R11;
  [process_table + 9] = 0;
  SP = userSP;
  ireturn;